<?xml version="1.0" encoding="UTF-8"?>
<blogpost>
<title>Hacking Railwind for Better Dark Mode</title>
<url>railwind_darkmode</url>
<date>2023-08-01T18:00:00</date>
<visibility post=0 />
<content>
    <p>For the default <a href="/themes">theme</a> of my website, I use <a href="https://tailwindcss.com/">Tailwind CSS</a> classes to make the front-end design easier. However, because my <a href="/projects/website">site generator</a> is completely written in Rust, I didn't want to use the standard Tailwind installation with npm and dependencies outside the cargo ecosystem. Tailwind does offer a <a href="https://tailwindcss.com/blog/standalone-cli" trail="">standalone binary</a>, but it's still less convenient than a Rust-native solution for my use case, as I currently don't generate any HTML files to use as input to tailwind (it's all in memory).</p>
    <p>So, after a little research, I decided to use <a href="https://github.com/pintariching/railwind">railwind</a> for my CSS compilation. This allowed the CSS to be generated and stored alongside the HTML generated from my templates. However, after finishing much of the first version of the site, I encountered a problem with dark mode support.</p>
    <p>While I'm a consistent dark mode user for everything I use, and would not mind if every site were permenantly in dark mode, I do recognize it can be nice to easily be able to switch between dark and light modes. By default, tailwind's (and railwind's) dark mode <a href="https://tailwindcss.com/docs/dark-mode">variant</a> is based on a media query, automatically matching the user's browser settings. However, I prefer dark mode toggles for most sites, which Tailwind supports via the <c l="js">darkMode: 'class'</c> setting, which adds a <c>dark</c> class that enables dark mode when present, allowing for manual toggles to be made with basic JS.</p>
    <p>However, the same is not possible in railwind, due to its lack of a <c>tailwind.config.js</c> file. Instead, the railwind compiler always emits <c l="css">@media (prefers-color-scheme: dark) {</c> wrappers around every dark variant class. While I was initally going to edit this in railwind's code, I soon gave up navigating its structure (which has changed greatly version-to-version) and instead decided to quickly patch it with some basic find-and-replace logic.</p>
    <p>However, because CSS <c l="css">@media</c> queries wrap around other rules, while the class-based manual dark mode adds an extra class to the rule, doing this was slightly non-trivial. To get it working, I settled on replacing lines beginning with <c l="css">@media (prefers-color-scheme: dark) {</c> with <c l="css">@media screen { .dark</c> where the <c l="css">@media screen {</c> selects all screens<footnote>Arguably a feature, as (AFAIK) the only alternative is <c>print</c> where dark mode just wastes ink!</footnote>.</p>
    <p>I hate this "fix." Everything about it, from the <c>.dark</c> class specifier dangling at the end of the line to the hard-coded string-replacement that will break on the tiniest change to railwind. Everytime I scroll past it in my code, I remember that I should change it, and yet I haven't. Because it works. So here it remains, as I procrastinate fixing it to add yet more features to the site. Perhaps it's a reminder that aladsgakljbv;klfbjnlksdnv</p>
</content>
</blogpost>